# .config/bashrc

##### Set bash options ########################################################

# ディレクトリ名を実行すると、そのディレクトリに移動する
shopt -s autocd

# dotで始まるファイルをワイルドカードのマッチ対象に含める
shopt -s dotglob

# ** を指定すると、該当ディレクトリ以下のディレクトリを再帰的にマッチにする
shopt -s globstar

##### User specific alias #####################################################

if [ -f /etc/redhat-release ]; then
    if [[ -n "${NVIM_LISTEN_ADDRESS}" && -x "$(command -v nvr)" ]]; then
        alias vi="nvr -s"
    else
        alias vi="$HOME/neovim/bin/nvim"
    fi
fi

alias cd='cdls'

cdls() {
    \cd "$@" && pwd && ls -l --color=always | less
}

cdd() {
    cd ~/.dotfiles/
}

cdr() {
    cd "$(git rev-parse --show-toplevel)" || return
}

#alias g='git'
#complete -o default -o nospace -F _git g

alias ga='git add'
alias gaa='git add -A'
alias gb='git branch'
alias gc='git commit'
alias gcm='git commit -m'
alias gco='git checkout'
alias gd='git diff'
alias gdc='git diff --cached'
alias gdd='git difftool'
alias gf='git fetch'
alias gg='git graph'
alias gm='git merge'
alias gmt='git mergetool'
alias gp='git pull'
alias gpu='git push'
alias gs='git status'
alias gsf='git submodule foreach'
alias gsr='git submodule foreach git checkout .'
alias gsm='git submodule foreach git pull origin master'
alias gsu='git submodule update --recursive'

# Delete merged branch
alias gbd='git branch --merged | grep -vE "^\*| master$| develop$" | xargs git branch -d'

# Delere squash merged branch
function gbds() {
    git checkout -q master
    git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do
        mergeBase=$(git merge-base master "$branch")
        if [[ $(git cherry master "$(git commit-tree "$(git rev-parse "$branch"^{tree})" -p "$mergeBase" -m _)") == "-"* ]]; then
            git branch -D "$branch"
        fi
    done
}
alias gbds=gbds

alias jfl='curl -X POST --insecure -F "jenkinsfile=<Jenkinsfile" https://jenkins.docker.hpecorp.net/pipeline-model-converter/validate'
#alias jfl='curl -X POST --insecure -F "jenkinsfile=<Jenkinsfile" https://jenkins.docker.hpecorp.net/pipeline-model-converter/validateJenkinsfile'

alias jcli='java -jar ~/bin/jenkins-cli.jar -noCertificateCheck -s https://jenkins.docker.hpecorp.net/'

##### Load bashmarks ##########################################################

if [ -f ~/.local/bin/bashmarks.sh ]; then
    . ~/.local/bin/bashmarks.sh
fi

##### Enterprise Linux specific configurations ################################

if [ -f /etc/redhat-release ]; then

    ##### For git completion and prompt ###########################################

    source "$HOME/src/git/contrib/completion/git-completion.bash"
    source "$HOME/src/git/contrib/completion/git-prompt.sh"

    # Unstaged (*) and staged (+) changes will be shown next to the branch name
    GIT_PS1_SHOWDIRTYSTATE=true

    # A "<" indicates you are behind, ">" indicates you are ahead,
    # "<>" indicates you have diverged and "=" indicates that there is no difference.
    GIT_PS1_SHOWUPSTREAM=auto

    # If there're untracked files, then a '%' will be shown next to the branch name.
    GIT_PS1_SHOWUNTRACKEDFILES=true

    # If something is stashed, then a '$' will be shown next to the branch name.
    GIT_PS1_SHOWSTASHSTATE=true

    ##### Set prompt ##############################################################

    # Defind Colors
    RED="\033[38;2;255;84;88m"
    GREEN="\033[38;2;98;209;150m"
    YELLOW="\033[38;2;255;179;120m"
    BLUE="\033[38;2;101;178;255m"
    MAGENTA="\033[38;2;144;108;255m"
    CYAN="\033[38;2;99;242;241m"
    CLEAR="\033[0m"

    # Hostname hash
    #HMD5="$(hostname | md5sum)"
    #PROMPT_RGB="$(printf "%d;%d;%d" 0x${HMD5:0:2} 0x${HMD5:2:2} 0x${HMD5:4:2})"
    #PROMPT_COLOR="\033[38;2;${PROMPT_RGB}m"
    #GIT_PROMPT_RGB="$(printf "%d;%d;%d" 0x${HMD5:6:2} 0x${HMD5:8:2} 0x${HMD5:10:2})"
    #GIT_PROMPT_COLOR="\033[38;2;${GIT_PROMPT_RGB}m"

    PROMPT_DIRTRIM=3

    # Set prompt
    if [[ -n "${NVIM_LISTEN_ADDRESS}" ]]; then
        PS1="\[${RED}\]\${?##0}\[${MAGENTA}\]\u\[${BLUE}\]@\h \[${GREEN}\]\w\[${YELLOW}\]\$(__git_ps1)\[${RED}\]\\$>\[${CLEAR}\] "
    else
        PS1="\[${RED}\]\${?##0}\[${MAGENTA}\]\u\[${BLUE}\]@\h \[${GREEN}\]\w\[${YELLOW}\]\$(__git_ps1)\[${RED}\]\\$\[${CLEAR}\] "
    fi
fi
