# .config/bashrc

##### Environment variables ###################################################

export GPG_TTY=$(tty)

##### Set bash options ########################################################

# ディレクトリ名を実行すると、そのディレクトリに移動する
shopt -s autocd

# dotで始まるファイルをワイルドカードのマッチ対象に含める
shopt -s dotglob

# ** を指定すると、該当ディレクトリ以下のディレクトリを再帰的にマッチにする
shopt -s globstar

# シェルスクリプト内でaliasを使えるようにする
shopt -s expand_aliases

##### User specific alias #####################################################

if [[ -n "${NVIM_LISTEN_ADDRESS}" && -x "$(command -v nvr)" ]]; then
    alias vi="nvr -s"
else
    alias vi="nvim"
fi

cdls() {
    \cd "$@" && pwd && ls -l --color=always | less
}

cdd() {
    cd ~/.dotfiles/
}

cds() {
    cd ~/.local/share/nvim/swap
}

cdr() {
    cd "$(git rev-parse --show-toplevel)" || return
}

docker-clean() {
    docker container prune -f
    docker volume prune -f
    docker image prune -f
    # docker system prune --volumes -f
}

tmp-clean() {
    find /tmp -mtime +60 -type f -delete
    find /tmp -empty -type d -delete
}

venv() {
    if [[ ! -d .venv ]]; then
        python3 -m venv .venv
        . .venv/bin/activate
        pip install -U pip setuptools
    else
        . .venv/bin/activate
    fi
}

az-vm() {
    RESOURCE_GROUP="${1}"
    OPERATION="${2}"
    for vm in $(az vm list --query "[].[name]" -g ${RESOURCE_GROUP} -o tsv); do
        echo "${OPERATION} ${vm} ..."
        az vm ${OPERATION} -g ${RESOURCE_GROUP} -n ${vm} --no-wait
    done
}

#alias g='git'
#complete -o default -o nospace -F _git g

if [[ -f /etc/redhat-release ]]; then
    source "$HOME/src/git/contrib/completion/git-completion.bash"
else
    source "/usr/share/bash-completion/completions/git"
fi

alias ga='git add'
alias gaa='git add -A'
alias gb='git branch'
alias gc='git commit'
alias gca='git commend'
alias gcm='git commit -m'
alias gco='git checkout'
alias gd='git diff'
alias gdc='git diff --cached'
alias gdd='git difftool'
alias gf='git fetch'
alias gg='git graph'
alias gi='git it'
alias gm='git merge'
alias gmt='git mergetool'
alias gp='git pull'
alias gpf='git please'
alias gpu='git push'
alias gs='git status'
alias gsf='git submodule foreach'
alias gsr='git submodule foreach git checkout .'
alias gsm='git submodule foreach git pull origin master'
alias gsu='git submodule update --recursive'

# Delete merged branch
alias gbd='git branch --merged | grep -vE "^\*| master$| develop$" | xargs git branch -d'

# Delere squash merged branch
function gbds() {
    git checkout -q master
    git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do
        mergeBase=$(git merge-base master "$branch")
        if [[ $(git cherry master "$(git commit-tree "$(git rev-parse "$branch"^{tree})" -p "$mergeBase" -m _)") == "-"* ]]; then
            git branch -D "$branch"
        fi
    done
}
alias gbds=gbds

alias jfl='curl -X POST --insecure -F "jenkinsfile=<Jenkinsfile" https://jenkins.docker.hpecorp.net/pipeline-model-converter/validate'
#alias jfl='curl -X POST --insecure -F "jenkinsfile=<Jenkinsfile" https://jenkins.docker.hpecorp.net/pipeline-model-converter/validateJenkinsfile'

alias jcli='java -jar ~/bin/jenkins-cli.jar -noCertificateCheck -s https://jenkins.docker.hpecorp.net/'

alias k='kubectl'
alias ka='kubectl apply'
alias kc='kubectl create'
alias kd='kubectl delete'
alias ke='kubectl exec'
alias kg='kubectl get'
alias kga='kubectl get all'
alias kl='kubectl logs'
alias ks='kubectl describe'

alias a='ansible'
alias ap='ansible-playbook'
alias av='ansible-vault'

alias e='explorer.exe .'

alias nd='nbdiff -s'

##### Load bashmarks ##########################################################

if [ -f ~/.local/bin/bashmarks.sh ]; then
    . ~/.local/bin/bashmarks.sh
fi

##### Set prompt ##############################################################

source "$HOME/src/gitstatus/gitstatus.prompt.sh"

# Defind Colors
RED="\[\033[38;2;255;84;88m\]"
GREEN="\[\033[38;2;98;209;150m\]"
YELLOW="\[\033[38;2;255;179;120m\]"
BLUE="\[\033[38;2;101;178;255m\]"
MAGENTA="\[\033[38;2;144;108;255m\]"
CYAN="\[\033[38;2;99;242;241m\]"
CLEAR="\[\033[0m\]"

# Hostname hash
#HMD5="$(hostname | md5sum)"
#PROMPT_RGB="$(printf "%d;%d;%d" 0x${HMD5:0:2} 0x${HMD5:2:2} 0x${HMD5:4:2})"
#PROMPT_COLOR="\033[38;2;${PROMPT_RGB}m"
#GIT_PROMPT_RGB="$(printf "%d;%d;%d" 0x${HMD5:6:2} 0x${HMD5:8:2} 0x${HMD5:10:2})"
#GIT_PROMPT_COLOR="\033[38;2;${GIT_PROMPT_RGB}m"

PROMPT_DIRTRIM=3

# Set prompt
PS1="${MAGENTA}\u${BLUE}@\h ${CYAN}\w"
PS1+=" \${GITSTATUS_PROMPT}\n"
PS1+="\$([ \$? = "0" ] && echo -n '${GREEN}' || echo -n '${RED}')\\$"
PS1+="$([ -n "${NVIM_LISTEN_ADDRESS}" ] && echo -n '>' || echo -n '')"
PS1+="${CLEAR} "
