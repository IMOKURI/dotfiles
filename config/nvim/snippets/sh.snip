snippet template
abbr bash script template
    #!/bin/bash
    #===============================================================================
    #
    #          FILE: `expand("%:t")`
    #
    #         USAGE: ./`expand("%:t")`
    #
    #   DESCRIPTION: ${1:---}
    #
    #       OPTIONS: ${2:---}
    #  REQUIREMENTS: ${3:---}
    #         NOTES: ${4:---}
    #      REVISION: 0.10
    #===============================================================================

    #-------------------------------------------------------------------------------
    # 変数
    #-------------------------------------------------------------------------------

    readonly PROGNAME=$(basename "\${0}")
    readonly TMPDIR=$(mktemp -d)

    readonly VARIABLE="variable"

    #-------------------------------------------------------------------------------
    # 汎用関数
    #-------------------------------------------------------------------------------

    function trapCleanup() {
        # Delete TMPDIR, if any
        if [ -d "${TMPDIR}" ] ; then
            rm -rf "${TMPDIR}"
        fi
        echo "Exit trapped. In function: '${FUNCNAME[*]}'"
    }

    function safeExit() {
        # Delete TMPDIR, if any
        if [ -d "${TMPDIR}" ] ; then
            rm -rf "${TMPDIR}"
        fi
        trap - INT TERM EXIT
        exit 0
    }

    function usage() {
        echo "
        Usage: ${PROGNAME} [OPTION...]

        Options:
        -p, --port      Port number
        -h, --help      Show help message
        -d, --debug     Runs script in bash debug mode (set -x)
        "
    }

    #-------------------------------------------------------------------------------
    # フラグ
    #-------------------------------------------------------------------------------

    set -o errexit
    set -o nounset
    set -o pipefail

    trap trapCleanup EXIT INT TERM

    #-------------------------------------------------------------------------------
    # 引数展開
    #-------------------------------------------------------------------------------

    [[ $# -eq 0 ]] && set -- "--help"

    while [ $# -gt 0 ];
    do
        case "\${1}" in

            --debug|-d)
                set -x
                ;;

            --port|-p)
                readonly PORT="\${2}"
                shift
                ;;

            --help|-h)
                usage
                safeExit
                ;;

            *)
                echo "Invalid option: '\${1}'"
                usage
                safeExit
                ;;
        esac
        shift
    done

    #-------------------------------------------------------------------------------
    # メイン関数
    #-------------------------------------------------------------------------------

    function main() {
        ${0}
    }

    #-------------------------------------------------------------------------------
    # メイン
    #-------------------------------------------------------------------------------

    main

    safeExit
