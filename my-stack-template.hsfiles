{-# START_FILE {{name}}.cabal #-}
name:                {{name}}
version:             0.1.0.0
synopsis:            Initial project template from stack
description:         Please see README.md
homepage:            http://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme
license:             MIT
license-file:        LICENSE
author:              {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer:          {{author-email}}{{^author-email}}example@example.com{{/author-email}}
copyright:           {{copyright}}{{^copyright}}2010 Author Here{{/copyright}}
category:            {{category}}{{^category}}Web{{/category}}
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:     MyLib
  build-depends:       base >= 4.7 && < 5
  ghc-options:         -Wall
  default-language:    Haskell2010

executable {{name}}
  hs-source-dirs:      src
  main-is:             Main.hs
  other-modules:       MyLib
  ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N
  build-depends:       base
                     , {{name}}
  default-language:    Haskell2010

test-suite tests
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
                     , src
  main-is:             Spec.hs
  other-modules:       MyLib
  build-depends:       base
                     , {{name}}
                     , hspec
  ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

source-repository head
  type:     git
  location: https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}.git

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE tests/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF hspec-discover #-}

{-# START_FILE tests/MyLibSpec.hs #-}
module MyLibSpec where

import MyLib

import Test.Hspec

spec :: Spec
spec = do
  describe "MyLib test" $ do
    it "returns someFunc" $ do
      someFunc `shouldBe` "someFunc"

{-# START_FILE src/MyLib.hs #-}
module MyLib
( someFunc
) where

someFunc :: String
someFunc = "someFunc"

{-# START_FILE src/Main.hs #-}
module Main where

import MyLib

main :: IO ()
main = print someFunc

{-# START_FILE LICENSE #-}
Copyright (c) {{copyright}}{{^copyright}}2010 Author Here{{/copyright}}

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

{-# START_FILE README.md #-}
# {{name}}

{-# START_FILE .gitignore #-}
.stack-work

