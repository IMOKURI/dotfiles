#!/usr/bin/env bash

set -e

##### Variables ###############################################################

# Defind Colors
#RED="\033[38;2;255;84;88m"
#GREEN="\033[38;2;98;209;150m"
#YELLOW="\033[38;2;255;179;120m"
BLUE="\033[38;2;101;178;255m"
#MAGENTA="\033[38;2;144;108;255m"
#CYAN="\033[38;2;99;242;241m"
CLEAR_COLOR="\033[0m"

INFO="GREEN"
#WARN="YELLOW"
#ERROR="RED"

# Define path
DOTPATH="$HOME/.dotfiles"
NEOVIMPATH="$HOME/src/neovim"
GITPATH="$HOME/src/git"

##### Functions ###############################################################

function _banner(){
  sep=$(for ((i=1; i<$(tput cols); i++)); do echo -n =; done)
  printf "\n${BLUE}%s %s${CLEAR_COLOR}\n\n" "${1}" "${sep:${#1}}"
}

function _logger(){
  COLOR="${1}"
  printf "${!COLOR}%s${CLEAR_COLOR}\n" "${2}"
}

##### Set Proxy ###############################################################

_banner "Set Proxy if Available..."

if [[ "${http_proxy}" ]]; then
  if ! grep -q proxy /etc/yum.conf; then
    echo "proxy=${http_proxy}" | sudo tee -a /etc/yum.conf
  fi
fi

##### Setup repositories ######################################################

_banner "Setup repositories..."

if [[ ! -f /etc/yum.repos.d/github_git-lfs.repo ]]; then
  _logger "${INFO}" "Install Git LFS repository"
  curl -fsSL https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | sudo -E bash
fi

if [[ ! -f /etc/yum.repos.d/nodesource-el.repo ]]; then
  _logger "${INFO}" "Install Nodejs repository"
  curl -fsSL https://rpm.nodesource.com/setup_11.x | sudo -E bash
fi

##### Install packages ########################################################

_banner "Install Packages..."

sudo -E yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

sudo -E yum install -y autoconf automake cmake expat-devel gcc gcc-c++ git libcurl-devel libffi-devel libtool make ninja-build nodejs openssl-devel patch pkgconfig python python-devel python36 python36-devel unzip which lua-term

##### Clone Dotfiles ##########################################################

_banner "Clone Dotfiles..."

if [[ ! -d "${DOTPATH}" ]]; then
  _logger "${INFO}" "Clone dotfiles repository"
  git clone https://github.com/IMOKURI/dotfiles.git "${DOTPATH}"
else
  _logger "${INFO}" "Update dotfiles repository"
  pushd "$(pwd)"
  cd "${DOTPATH}"
  git pull
  popd
fi

##### Clone git ###############################################################

_banner "Clone Git..."

if [[ ! -d "${GITPATH}" ]]; then
  _logger "${INFO}" "Clone git"
  git clone https://github.com/git/git.git "${GITPATH}"
  sudo -E yum remove -y git
else
  _logger "${INFO}" "Update git repository"
  pushd "$(pwd)"
  cd "${DOTPATH}"
  make update-git
  popd
fi

##### Install git #############################################################

_banner "Install Git..."

pushd "$(pwd)"
cd "${DOTPATH}"
make build-git
popd

_logger "${INFO}" "Install Git-LFS"

export PATH="$HOME/bin:$PATH"
sudo -E yum install -y git-lfs

##### Install python packages #################################################

_banner "Install Pip..."

command -v pip3 &> /dev/null || curl -fsSL "https://bootstrap.pypa.io/get-pip.py" | sudo -E python3

_banner "Install Python Packages..."

sudo -E /usr/local/bin/pip install ansible pipenv pipenv-pipes flake8 jedi vim-vint yamllint

##### Install nodejs packages #################################################

_banner "Install NodeJS Packages..."

sudo -E npm -g install doctoc neovim jsonlint remark-cli

##### Install ripgrep #########################################################

_banner "Install RipGrep..."

if [[ ! -f "${HOME}/bin/rg" ]]; then
  curl -fsSL -o /tmp/rg.tar.gz https://github.com/BurntSushi/ripgrep/releases/download/11.0.0/ripgrep-11.0.0-x86_64-unknown-linux-musl.tar.gz

  tar xf /tmp/rg.tar.gz -C "$HOME/src/"

  ln -s $HOME/src/ripgrep-*/rg "$HOME/bin/rg"
fi

##### Install bashmarks #######################################################

_banner "Install Bashmarks..."

if [[ ! -d "${HOME}/src/bashmarks" ]]; then
  git clone https://github.com/huyng/bashmarks.git "${HOME}/src/bashmarks"
  pushd "$(pwd)"
  cd "${HOME}/src/bashmarks"
  make install
  popd
fi

##### Clone neovim ############################################################

_banner "Clone Neovim..."

if [[ ! -d "${NEOVIMPATH}" ]]; then
  _logger "${INFO}" "Clone neovim"
  git clone https://github.com/neovim/neovim.git "${NEOVIMPATH}"
else
  _logger "${INFO}" "Update neovim repository"
  pushd "$(pwd)"
  cd "${DOTPATH}"
  make update-neovim
  popd
fi

##### Install neovim ##########################################################

_banner "Install Neovim..."

pushd "$(pwd)"
cd "${DOTPATH}"
make build-neovim
popd

##### Install dotfiles ########################################################

_banner "Install dotfiles..."

pushd "$(pwd)"
cd "${DOTPATH}"
make install
if ! grep -q '.config/bashrc' ${HOME}/.bashrc; then
  echo -e "\nif [ -f ~/.config/bashrc ]; then\n  . ~/.config/bashrc\nfi" >> "${HOME}/.bashrc"
fi
if ! grep -q '.config/profile.d/local.sh' ${HOME}/.bash_profile; then
  echo -e "\nif [ -f ~/.config/profile.d/local.sh ]; then\n  . ~/.config/profile.d/local.sh\nfi" >> "${HOME}/.bash_profile"
fi
popd

_banner "Finished!"
