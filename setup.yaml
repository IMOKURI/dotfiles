---
- hosts: localhost
  gather_facts: false
  vars:
      proxy:
          http_proxy: "{{ lookup('env', 'http_proxy') | default('') }}"
  environment: "{{ proxy }}"
  tasks:
      - name: Set Proxy to Bash Profile
        blockinfile:
            path: ~/.bash_profile.proxy
            create: true
            block: |
                function proxy_on {
                  export http_proxy={{ proxy.http_proxy }}
                  export https_proxy={{ proxy.http_proxy }}
                }

                function proxy_off {
                  unset http_proxy
                  unset https_proxy
                }

                export proxy_on=proxy_on
                export proxy_off=proxy_off

                export http_proxy={{ proxy.http_proxy }}
                export https_proxy={{ proxy.http_proxy }}
        when: proxy.http_proxy != ''
        tags: initialize

      - name: Set Proxy to Git Config
        blockinfile:
            path: ~/.gitconfig.local
            create: true
            block: |
                [user]
                  name =
                  email =
                [http]
                  proxy = {{ proxy.http_proxy }}
                [https]
                  proxy = {{ proxy.http_proxy }}
        when: proxy.http_proxy != ''
        # notify: TODO
        tags: initialize

      - name: Clone/Update Dotfiles Repository
        git:
            repo: https://github.com/IMOKURI/dotfiles.git
            dest: ~/.dotfiles
            track_submodules: true
        tags: [initialize, update]

      - name: Install Python2 Packages
        shell: "pipenv install"
        args:
            chdir: ~/.dotfiles/config/nvim/py2
        tags: initialize

      - name: Install Python3 Packages
        shell: "pipenv install"
        args:
            chdir: ~/.dotfiles/config/nvim/py3
        tags: initialize

      - name: Set Alternative Commands
        alternatives:
            name: "{{ item.name }}"
            link: "{{ item.link }}"
            path: "{{ item.path }}"
            priority: "{{ item.priority }}"
        with_items:
            - {name: 'vi', link: '/usr/local/bin/vi', path: "{{ lookup('pipe', 'which nvim') }}", priority: 100}
        become: true
        tags: initialize

      - name: Find Dotfiles Path
        find:
            paths: ~/.dotfiles
            patterns: "^(?!(\\.|README.md|LICENSE|install|setup.yaml)).*$"
            use_regex: true
        register: find
        tags: deploy

      - name: Create Symbolic Links To Dotfiles
        file:
            src: "~/.dotfiles/{{ item.path | regex_replace('^.*/([^/]+)$', '\\1') }}"
            dest: "~/.{{ item.path | regex_replace('^.*/([^/]+)$', '\\1') }}"
            state: link
            force: true
        with_items:
            - "{{ find.files }}"
        tags: deploy

      - name: Find Config Dotfiles Path
        find:
            paths: ~/.dotfiles/config
            file_type: any
        register: find_config
        tags: deploy

      - name: Create Config Directory
        file:
            path: ~/.config
            state: directory
        tags: deploy

      - name: Create Symbolic Links To Config Dotfiles
        file:
            src: "~/.dotfiles/config/{{ item.path | regex_replace('^.*/([^/]+)$', '\\1') }}"
            dest: "~/.config/{{ item.path | regex_replace('^.*/([^/]+)$', '\\1') }}"
            state: link
            force: true
        with_items:
            - "{{ find_config.files }}"
        tags: deploy

      - name: Create Git Work Directory
        file:
            path: "{{ item }}"
            state: directory
        with_items:
            - ~/github
            - ~/ghe
        tags: deploy
